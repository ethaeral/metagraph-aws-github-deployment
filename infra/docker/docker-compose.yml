version: '3'
services:
  global-l0-1:
    container_name: global-l0-1
    build:
      context: ../../source
      dockerfile: ../infra/docker/global-l0/Dockerfile
    image: global-l0
    environment:
      - CL_APP_ENV=dev
      - CL_COLLATERAL=0
      - CL_ENV=dev
      - SHOULD_RESET_GENESIS_FILE=${SHOULD_RESET_GENESIS_FILE}
      - FORCE_ROLLBACK=${FORCE_ROLLBACK}
    volumes:
      - ../shared/jars:/code/jars/
      - ../../source/global-l0/tessellation:/code/codebase/tessellation
      - ../../source/global-l0/genesis:/code/genesis/.
      - ../../scripts/start_containers/start_genesis_global.sh:/code/start_genesis_global.sh
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      custom-network:
        ipv4_address: 172.50.0.5
    command: >
      sh -c 'chmod a+rwx start_genesis_global.sh && ./start_genesis_global.sh'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://global-l0-1:9000/cluster/info" ]
      interval: 10s
      timeout: 10s
      retries: 10
  dag-l1-1:
    container_name: dag-l1-1
    build:
      context: ../../source
      dockerfile: ../infra/docker/dag-l1/initial-validator/Dockerfile
    depends_on:
      global-l0-1:
        condition: service_completed_successfully
    image: dag-l1-initial-validator
    environment:
      - CL_PUBLIC_HTTP_PORT=9000
      - CL_P2P_HTTP_PORT=9001
      - CL_CLI_HTTP_PORT=9002
      - CL_L0_PEER_HTTP_HOST=global-l0-1
      - CL_L0_PEER_HTTP_PORT=9000
      - CL_APP_ENV=dev
      - CL_COLLATERAL=0
    volumes:
      - ../shared/jars:/code/jars/
    ports:
      - '9100:9000'
      - '9101:9001'
      - '9102:9002'
    networks:
      custom-network:
        ipv4_address: 172.50.0.10
    command: >
      sh -c "cp dag-l1.jar jars/dag-l1.jar && \
             cp cl-wallet.jar jars/cl-wallet.jar && \
             java -jar dag-l1.jar run-initial-validator --ip 172.50.0.10"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://dag-l1-1:9000/cluster/info" ]
      interval: 10s
      timeout: 10s
      retries: 10
  # dag-l1-2:
  #   container_name: dag-l1-2
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/dag-l1/node-2/Dockerfile
  #   image: dag-l1-validator-node-2
  #   depends_on:
  #     dag-l1-1:
  #       condition: service_healthy
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '9200:9000'
  #     - '9201:9001'
  #     - '9202:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.11
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \
      
  #            cd genesis/ && \
      
  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \
  #            cd ../ && \
      
  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_2} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_2} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_2} && \
      
  #            cp jars/dag-l1.jar dag-l1.jar && \
  #            java -jar dag-l1.jar run-validator --ip 172.50.0.11"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://dag-l1-2:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # dag-l1-3:
  #   container_name: dag-l1-3
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/dag-l1/node-3/Dockerfile
  #   image: dag-l1-validator-node-3
  #   depends_on:
  #     dag-l1-1:
  #       condition: service_healthy
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '9300:9000'
  #     - '9301:9001'
  #     - '9302:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.12
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \

  #            cd genesis/ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \

  #            cd ../ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_3} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_3} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_3} && \

  #            cp jars/dag-l1.jar dag-l1.jar && \
  #            java -jar dag-l1.jar run-validator --ip 172.50.0.12"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://dag-l1-3:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l0-1:
  #   container_name: metagraph-l0-1
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l0-genesis/Dockerfile
  #   depends_on:
  #     dag-l1-1:
  #       condition: service_completed_successfully
  #   image: metagraph-l0-initial-validator
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #     - SHOULD_RESET_GENESIS_FILE=${SHOULD_RESET_GENESIS_FILE}
  #     - FORCE_ROLLBACK=${FORCE_ROLLBACK}
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #     - ../../../source/metagraph-l0/genesis:/code/genesis/
  #     - ../../../scripts/start_containers/start_genesis_metagraph.sh:/code/start_genesis_metagraph.sh
  #   ports:
  #     - '9400:9000'
  #     - '9401:9001'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.20
  #   command: >
  #     sh -c 'chmod a+rwx start_genesis_metagraph.sh && ./start_genesis_metagraph.sh'
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l0-1:9000/cluster/info" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l0-2:
  #   container_name: metagraph-l0-2
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l0/node-2/Dockerfile
  #   image: metagraph-l0-validator-node-2
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '9500:9000'
  #     - '9501:9001'
  #     - '9502:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.21
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \

  #            cd genesis/ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \

  #            export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \

  #            cd ../ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_2} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_2} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_2} && \

  #            cp jars/metagraph-l0.jar metagraph-l0.jar && \
  #            java -jar metagraph-l0.jar run-validator --ip 172.50.0.21"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l0-2:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l0-3:
  #   container_name: metagraph-l0-3
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l0/node-3/Dockerfile
  #   image: metagraph-l0-validator-node-3
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '9600:9000'
  #     - '9601:9001'
  #     - '9602:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.22
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \

  #            cd genesis/ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \

  #            export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \

  #            cd ../ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_3} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_3} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_3} && \

  #            cp jars/metagraph-l0.jar metagraph-l0.jar && \
  #            java -jar metagraph-l0.jar run-validator --ip 172.50.0.22"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l0-3:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l1-currency-1:
  #   container_name: metagraph-l1-currency-1
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l1-currency/initial-validator/Dockerfile
  #   depends_on:
  #     metagraph-l0-1:
  #       condition: service_completed_successfully
  #   image: metagraph-l1-currency-initial-validator
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=metagraph-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '9700:9000'
  #     - '9701:9001'
  #     - '9702:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.30
  #   command: >
  #     sh -c "export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_PEER_ID=$${CL_GLOBAL_L0_PEER_ID}
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \
  #            cp metagraph-l1-currency.jar jars/metagraph-l1-currency.jar && \
  #            cp cl-wallet.jar jars/cl-wallet.jar && \
  #            java -jar metagraph-l1-currency.jar run-initial-validator --ip 172.50.0.30"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l1-currency-1:9000/cluster/info" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l1-currency-2:
  #   container_name: metagraph-l1-currency-2
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l1-currency/node-2/Dockerfile
  #   image: metagraph-l1-currency-validator-node-2
  #   depends_on:
  #     metagraph-l1-currency-1:
  #       condition: service_healthy
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=metagraph-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '9800:9000'
  #     - '9801:9001'
  #     - '9802:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.31
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \
      
  #            cd genesis/ && \
      
  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \
      
  #            export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_PEER_ID=$${CL_GLOBAL_L0_PEER_ID}
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \
      
  #            cd ../ && \
      
  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_2} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_2} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_2} && \
      
  #            cp jars/metagraph-l1-currency.jar metagraph-l1-currency.jar && \
  #            java -jar metagraph-l1-currency.jar run-validator --ip 172.50.0.31"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l1-currency-2:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l1-currency-3:
  #   container_name: metagraph-l1-currency-3
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l1-currency/node-3/Dockerfile
  #   image: metagraph-l1-currency-validator-node-3
  #   depends_on:
  #     metagraph-l1-currency-1:
  #       condition: service_healthy
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=metagraph-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '9900:9000'
  #     - '9901:9001'
  #     - '9902:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.32
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \

  #            cd genesis/ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \

  #            export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_PEER_ID=$${CL_GLOBAL_L0_PEER_ID}
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \

  #            cd ../ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_3} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_3} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_3} && \

  #            cp jars/metagraph-l1-currency.jar metagraph-l1-currency.jar && \
  #            java -jar metagraph-l1-currency.jar run-validator --ip 172.50.0.32"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l1-currency-3:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l1-data-1:
  #   container_name: metagraph-l1-data-1
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l1-data/initial-validator/Dockerfile
  #   depends_on:
  #     metagraph-l1-currency-1:
  #       condition: service_completed_successfully
  #   image: metagraph-l1-data-initial-validator
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=metagraph-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '8000:9000'
  #     - '8001:9001'
  #     - '8002:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.40
  #   command: >
  #     sh -c "export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_PEER_ID=$${CL_GLOBAL_L0_PEER_ID}
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \
  #            cp metagraph-l1-data.jar jars/metagraph-l1-data.jar && \
  #            cp cl-wallet.jar jars/cl-wallet.jar && \
  #            java -jar metagraph-l1-data.jar run-initial-validator --ip 172.50.0.40"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l1-data-1:9000/cluster/info" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l1-data-2:
  #   container_name: metagraph-l1-data-2
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l1-data/node-2/Dockerfile
  #   image: metagraph-l1-data-validator-node-2
  #   depends_on:
  #     metagraph-l1-data-1:
  #       condition: service_healthy
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=metagraph-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '8100:9000'
  #     - '8101:9001'
  #     - '8102:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.41
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \
      
  #            cd genesis/ && \
      
  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \
      
  #            export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_PEER_ID=$${CL_GLOBAL_L0_PEER_ID}
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \
      
  #            cd ../ && \
      
  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_2} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_2} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_2} && \
      
  #            cp jars/metagraph-l1-data.jar metagraph-l1-data.jar && \
  #            java -jar metagraph-l1-data.jar run-validator --ip 172.50.0.41"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l1-data-2:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # metagraph-l1-data-3:
  #   container_name: metagraph-l1-data-3
  #   build:
  #     context: ../../source
  #     dockerfile: ../infra/docker/metagraph-l1-data/node-3/Dockerfile
  #   image: metagraph-l1-data-validator-node-3
  #   depends_on:
  #     metagraph-l1-data-1:
  #       condition: service_healthy
  #   environment:
  #     - CL_PUBLIC_HTTP_PORT=9000
  #     - CL_P2P_HTTP_PORT=9001
  #     - CL_CLI_HTTP_PORT=9002
  #     - CL_L0_PEER_HTTP_HOST=metagraph-l0-1
  #     - CL_L0_PEER_HTTP_PORT=9000
  #     - CL_GLOBAL_L0_PEER_HTTP_HOST=global-l0-1
  #     - CL_GLOBAL_L0_PEER_HTTP_PORT=9000
  #     - CL_APP_ENV=dev
  #     - CL_COLLATERAL=0
  #   volumes:
  #     - ../shared/jars:/code/jars/
  #   ports:
  #     - '8200:9000'
  #     - '8201:9001'
  #     - '8202:9002'
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.42
  #   command: >
  #     sh -c "cp jars/cl-wallet.jar genesis/cl-wallet.jar && \

  #            cd genesis/ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_GENESIS} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_GENESIS} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_GENESIS} && \

  #            export CL_GLOBAL_L0_PEER_ID=$$(java -jar cl-wallet.jar show-id) && \
  #            export CL_L0_PEER_ID=$${CL_GLOBAL_L0_PEER_ID}
  #            export CL_L0_TOKEN_IDENTIFIER=$METAGRAPH_ID && \

  #            cd ../ && \

  #            export CL_KEYSTORE=$${CL_KEYSTORE_NODE_3} && \
  #            export CL_KEYALIAS=$${CL_KEYALIAS_NODE_3} && \
  #            export CL_PASSWORD=$${CL_PASSWORD_NODE_3} && \

  #            cp jars/metagraph-l1-data.jar metagraph-l1-data.jar && \
  #            java -jar metagraph-l1-data.jar run-validator --ip 172.50.0.42"
  #   healthcheck:
  #     test: [ "CMD", "curl", "-f", "http://metagraph-l1-data-3:9000/metrics" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 10
  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:latest
  #   depends_on:
  #     metagraph-l1-data-1:
  #       condition: service_completed_successfully
  #   ports:
  #     - '9090:9090'
  #   command:
  #     - --storage.tsdb.path=monitoring/prometheus/data
  #     - --storage.tsdb.retention.time=200h
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./prometheus:/prometheus
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.7
  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana-oss:latest
  #   depends_on:
  #     - prometheus
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./grafana/config:/etc/grafana/provisioning
  #     - ./grafana/storage:/var/lib/grafana
  #     - ./grafana/datasources:/etc/grafana/provisioning/datasources
  #     - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
  #   environment:
  #     - GF_AUTH_ANONYMOUS_ENABLED=true
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE="Admin"
  #     - GF_AUTH_ANONYMOUS_ORG_ROLE="Viewer"
  #     - GF_AUTH_ANONYMOUS_ORG_NAME="Constellation"
  #     - GF_INSTALL_PLUGINS=natel-discrete-panel
  #   networks:
  #     custom-network:
  #       ipv4_address: 172.50.0.8
networks:
  custom-network:
    external: true